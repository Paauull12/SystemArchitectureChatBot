{
  "metrics": {
    "wmc": 3,
    "lcom": 0,
    "efferentCoupling": -1,
    "cyclomaticComplex": 1,
    "cognitiveComplex": 0,
    "afferentCoupling": 1
  },
  "problem": "The User class combines multiple responsibilities by handling both user data management and external operations such as database persistence and email communication. This violates the Single Responsibility Principle, which states that a class should have only one reason to change. Mixing business logic with infrastructure concerns makes the class harder to maintain, test, and extend, as changes in persistence or notification logic can inadvertently affect the core user model.",
  "solution": "To adhere to SRP, the persistence and email-sending logic should be extracted into separate service classes, such as UserRepository for database operations and EmailService for communication. The User class should focus solely on representing user data and behavior relevant to the domain model. This separation improves modularity, maintainability, and testability by isolating distinct responsibilities."
}